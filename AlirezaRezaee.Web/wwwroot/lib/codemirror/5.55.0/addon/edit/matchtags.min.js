!function(t){"object"==typeof exports&&"object"==typeof module?t(require("../../lib/codemirror"),require("../fold/xml-fold")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../fold/xml-fold"],t):t(CodeMirror)}(function(r){"use strict";function c(t){t.state.tagHit&&t.state.tagHit.clear(),t.state.tagOther&&t.state.tagOther.clear(),t.state.tagHit=t.state.tagOther=null}function a(n){n.state.failedTagMatch=!1,n.operation(function(){var t,e,o,a,i;c(n),n.somethingSelected()||(t=n.getCursor(),(e=n.getViewport()).from=Math.min(e.from,t.line),e.to=Math.max(t.line+1,e.to),(o=r.findMatchingTag(n,t,e))&&(!n.state.matchBothTags||(a="open"==o.at?o.open:o.close)&&(n.state.tagHit=n.markText(a.from,a.to,{className:"CodeMirror-matchingtag"})),(i="close"==o.at?o.open:o.close)?n.state.tagOther=n.markText(i.from,i.to,{className:"CodeMirror-matchingtag"}):n.state.failedTagMatch=!0))})}function i(t){t.state.failedTagMatch&&a(t)}r.defineOption("matchTags",!1,function(t,e,o){o&&o!=r.Init&&(t.off("cursorActivity",a),t.off("viewportChange",i),c(t)),e&&(t.state.matchBothTags="object"==typeof e&&e.bothTags,t.on("cursorActivity",a),t.on("viewportChange",i),a(t))}),r.commands.toMatchingTag=function(t){var e,o=r.findMatchingTag(t,t.getCursor());!o||(e="close"==o.at?o.open:o.close)&&t.extendSelection(e.to,e.from)}});